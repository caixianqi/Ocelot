// <auto-generated />
using System;
using IdentityDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IdentityDbContext.Migrations
{
    [DbContext(typeof(EntityFrameWorkIdentityDbcontext))]
    [Migration("20220212103035_initialization")]
    partial class initialization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("Domain.Models.ServiceRegisterEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("clientid");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_delete");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("secret");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("service_name");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("serviceregister");
                });

            modelBuilder.Entity("Domain.Models.User.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("EncryptPassword")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_delete");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = "1f69815c-b8eb-4dff-b395-5a8ead375173",
                            CreateTime = new DateTime(2022, 2, 12, 18, 30, 35, 439, DateTimeKind.Local).AddTicks(4572),
                            EncryptPassword = "7ed83e5ac3ebe1fcec9537f8d774c36f",
                            IsDelete = false,
                            UpdateTime = new DateTime(2022, 2, 12, 18, 30, 35, 440, DateTimeKind.Local).AddTicks(6681),
                            UserName = "123"
                        });
                });

            modelBuilder.Entity("Domain.Models.ServiceRegisterEntity", b =>
                {
                    b.HasOne("Domain.Models.User.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
